program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "3304.5.2"}, {"coremlc-version", "3304.6.2"}, {"coremltools-component-torch", "2.4.0"}, {"coremltools-source-dialect", "TorchScript"}, {"coremltools-version", "7.2"}})]
{
    func main<ios15>(tensor<fp32, [1, 3, 640, 640]> image) {
            tensor<fp32, []> image__scaled___y_0 = const()[name = tensor<string, []>("image__scaled___y_0"), val = tensor<fp32, []>(0x1.010102p-8)];
            tensor<fp32, [1, 3, 640, 640]> image__scaled__ = mul(x = image, y = image__scaled___y_0)[name = tensor<string, []>("image__scaled__")];
            tensor<int32, []> var_39 = const()[name = tensor<string, []>("op_39"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_46 = const()[name = tensor<string, []>("op_46"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_48 = const()[name = tensor<string, []>("op_48"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_1_pad_type_0 = const()[name = tensor<string, []>("input_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_1_pad_0 = const()[name = tensor<string, []>("input_1_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<string, []> image_to_fp16_dtype_0 = const()[name = tensor<string, []>("image_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [16, 3, 3, 3]> model_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_0_conv_weight_to_fp16"), val = tensor<fp16, [16, 3, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [16]> model_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_0_conv_bias_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1024)))];
            tensor<fp16, [1, 3, 640, 640]> cast_8 = cast(dtype = image_to_fp16_dtype_0, x = image__scaled__)[name = tensor<string, []>("cast_8")];
            tensor<fp16, [1, 16, 320, 320]> input_1_cast_fp16 = conv(bias = model_0_conv_bias_to_fp16, dilations = var_48, groups = var_39, pad = input_1_pad_0, pad_type = input_1_pad_type_0, strides = var_46, weight = model_0_conv_weight_to_fp16, x = cast_8)[name = tensor<string, []>("input_1_cast_fp16")];
            tensor<fp16, []> input_3_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_3_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_3_beta_0_to_fp16 = const()[name = tensor<string, []>("input_3_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 16, 320, 320]> input_3_cast_fp16 = clip(alpha = input_3_alpha_0_to_fp16, beta = input_3_beta_0_to_fp16, x = input_1_cast_fp16)[name = tensor<string, []>("input_3_cast_fp16")];
            tensor<int32, []> var_55 = const()[name = tensor<string, []>("op_55"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_62 = const()[name = tensor<string, []>("op_62"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_64 = const()[name = tensor<string, []>("op_64"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_5_pad_type_0 = const()[name = tensor<string, []>("input_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_5_pad_0 = const()[name = tensor<string, []>("input_5_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 16, 3, 3]> model_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_1_conv_weight_to_fp16"), val = tensor<fp16, [32, 16, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1152)))];
            tensor<fp16, [32]> model_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_1_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10432)))];
            tensor<fp16, [1, 32, 160, 160]> input_5_cast_fp16 = conv(bias = model_1_conv_bias_to_fp16, dilations = var_64, groups = var_55, pad = input_5_pad_0, pad_type = input_5_pad_type_0, strides = var_62, weight = model_1_conv_weight_to_fp16, x = input_3_cast_fp16)[name = tensor<string, []>("input_5_cast_fp16")];
            tensor<fp16, []> input_7_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_7_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_7_beta_0_to_fp16 = const()[name = tensor<string, []>("input_7_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 32, 160, 160]> input_7_cast_fp16 = clip(alpha = input_7_alpha_0_to_fp16, beta = input_7_beta_0_to_fp16, x = input_5_cast_fp16)[name = tensor<string, []>("input_7_cast_fp16")];
            tensor<int32, []> var_72 = const()[name = tensor<string, []>("op_72"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_82 = const()[name = tensor<string, []>("op_82"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_84 = const()[name = tensor<string, []>("op_84"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_9_pad_type_0 = const()[name = tensor<string, []>("input_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_9_pad_0 = const()[name = tensor<string, []>("input_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [32, 32, 1, 1]> model_2_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_2_cv1_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10560)))];
            tensor<fp16, [32]> model_2_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_2_cv1_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12672)))];
            tensor<fp16, [1, 32, 160, 160]> input_9_cast_fp16 = conv(bias = model_2_cv1_conv_bias_to_fp16, dilations = var_84, groups = var_72, pad = input_9_pad_0, pad_type = input_9_pad_type_0, strides = var_82, weight = model_2_cv1_conv_weight_to_fp16, x = input_7_cast_fp16)[name = tensor<string, []>("input_9_cast_fp16")];
            tensor<fp16, []> var_87_alpha_0_to_fp16 = const()[name = tensor<string, []>("op_87_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> var_87_beta_0_to_fp16 = const()[name = tensor<string, []>("op_87_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 32, 160, 160]> var_87_cast_fp16 = clip(alpha = var_87_alpha_0_to_fp16, beta = var_87_beta_0_to_fp16, x = input_9_cast_fp16)[name = tensor<string, []>("op_87_cast_fp16")];
            tensor<int32, [2]> var_88 = const()[name = tensor<string, []>("op_88"), val = tensor<int32, [2]>([16, 16])];
            tensor<int32, []> var_89_axis_0 = const()[name = tensor<string, []>("op_89_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 16, 160, 160]> var_89_cast_fp16_0, tensor<fp16, [1, 16, 160, 160]> var_89_cast_fp16_1 = split(axis = var_89_axis_0, split_sizes = var_88, x = var_87_cast_fp16)[name = tensor<string, []>("op_89_cast_fp16")];
            tensor<int32, [2]> var_97 = const()[name = tensor<string, []>("op_97"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_99 = const()[name = tensor<string, []>("op_99"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_13_pad_type_0 = const()[name = tensor<string, []>("input_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_13_pad_0 = const()[name = tensor<string, []>("input_13_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [16, 16, 3, 3]> model_2_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_2_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [16, 16, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12800)))];
            tensor<fp16, [16]> model_2_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_2_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17472)))];
            tensor<fp16, [1, 16, 160, 160]> input_13_cast_fp16 = conv(bias = model_2_m_0_cv1_conv_bias_to_fp16, dilations = var_99, groups = var_72, pad = input_13_pad_0, pad_type = input_13_pad_type_0, strides = var_97, weight = model_2_m_0_cv1_conv_weight_to_fp16, x = var_89_cast_fp16_1)[name = tensor<string, []>("input_13_cast_fp16")];
            tensor<fp16, []> input_15_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_15_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_15_beta_0_to_fp16 = const()[name = tensor<string, []>("input_15_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 16, 160, 160]> input_15_cast_fp16 = clip(alpha = input_15_alpha_0_to_fp16, beta = input_15_beta_0_to_fp16, x = input_13_cast_fp16)[name = tensor<string, []>("input_15_cast_fp16")];
            tensor<int32, [2]> var_106 = const()[name = tensor<string, []>("op_106"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_108 = const()[name = tensor<string, []>("op_108"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_17_pad_type_0 = const()[name = tensor<string, []>("input_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_17_pad_0 = const()[name = tensor<string, []>("input_17_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [16, 16, 3, 3]> model_2_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_2_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [16, 16, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17600)))];
            tensor<fp16, [16]> model_2_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_2_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22272)))];
            tensor<fp16, [1, 16, 160, 160]> input_17_cast_fp16 = conv(bias = model_2_m_0_cv2_conv_bias_to_fp16, dilations = var_108, groups = var_72, pad = input_17_pad_0, pad_type = input_17_pad_type_0, strides = var_106, weight = model_2_m_0_cv2_conv_weight_to_fp16, x = input_15_cast_fp16)[name = tensor<string, []>("input_17_cast_fp16")];
            tensor<fp16, []> var_111_alpha_0_to_fp16 = const()[name = tensor<string, []>("op_111_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> var_111_beta_0_to_fp16 = const()[name = tensor<string, []>("op_111_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 16, 160, 160]> var_111_cast_fp16 = clip(alpha = var_111_alpha_0_to_fp16, beta = var_111_beta_0_to_fp16, x = input_17_cast_fp16)[name = tensor<string, []>("op_111_cast_fp16")];
            tensor<fp16, [1, 16, 160, 160]> var_112_cast_fp16 = add(x = var_89_cast_fp16_1, y = var_111_cast_fp16)[name = tensor<string, []>("op_112_cast_fp16")];
            tensor<bool, []> input_19_interleave_0 = const()[name = tensor<string, []>("input_19_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 48, 160, 160]> input_19_cast_fp16 = concat(axis = var_72, interleave = input_19_interleave_0, values = (var_89_cast_fp16_0, var_89_cast_fp16_1, var_112_cast_fp16))[name = tensor<string, []>("input_19_cast_fp16")];
            tensor<int32, [2]> var_118 = const()[name = tensor<string, []>("op_118"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_120 = const()[name = tensor<string, []>("op_120"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_21_pad_type_0 = const()[name = tensor<string, []>("input_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_21_pad_0 = const()[name = tensor<string, []>("input_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [32, 48, 1, 1]> model_2_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_2_cv2_conv_weight_to_fp16"), val = tensor<fp16, [32, 48, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22400)))];
            tensor<fp16, [32]> model_2_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_2_cv2_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25536)))];
            tensor<fp16, [1, 32, 160, 160]> input_21_cast_fp16 = conv(bias = model_2_cv2_conv_bias_to_fp16, dilations = var_120, groups = var_72, pad = input_21_pad_0, pad_type = input_21_pad_type_0, strides = var_118, weight = model_2_cv2_conv_weight_to_fp16, x = input_19_cast_fp16)[name = tensor<string, []>("input_21_cast_fp16")];
            tensor<fp16, []> input_23_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_23_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_23_beta_0_to_fp16 = const()[name = tensor<string, []>("input_23_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 32, 160, 160]> input_23_cast_fp16 = clip(alpha = input_23_alpha_0_to_fp16, beta = input_23_beta_0_to_fp16, x = input_21_cast_fp16)[name = tensor<string, []>("input_23_cast_fp16")];
            tensor<int32, []> var_127 = const()[name = tensor<string, []>("op_127"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_134 = const()[name = tensor<string, []>("op_134"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_136 = const()[name = tensor<string, []>("op_136"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_25_pad_type_0 = const()[name = tensor<string, []>("input_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_25_pad_0 = const()[name = tensor<string, []>("input_25_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 32, 3, 3]> model_3_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_3_conv_weight_to_fp16"), val = tensor<fp16, [64, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25664)))];
            tensor<fp16, [64]> model_3_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_3_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(62592)))];
            tensor<fp16, [1, 64, 80, 80]> input_25_cast_fp16 = conv(bias = model_3_conv_bias_to_fp16, dilations = var_136, groups = var_127, pad = input_25_pad_0, pad_type = input_25_pad_type_0, strides = var_134, weight = model_3_conv_weight_to_fp16, x = input_23_cast_fp16)[name = tensor<string, []>("input_25_cast_fp16")];
            tensor<fp16, []> input_27_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_27_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_27_beta_0_to_fp16 = const()[name = tensor<string, []>("input_27_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 64, 80, 80]> input_27_cast_fp16 = clip(alpha = input_27_alpha_0_to_fp16, beta = input_27_beta_0_to_fp16, x = input_25_cast_fp16)[name = tensor<string, []>("input_27_cast_fp16")];
            tensor<int32, []> var_144 = const()[name = tensor<string, []>("op_144"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_156 = const()[name = tensor<string, []>("op_156"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_158 = const()[name = tensor<string, []>("op_158"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_29_pad_type_0 = const()[name = tensor<string, []>("input_29_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_29_pad_0 = const()[name = tensor<string, []>("input_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 64, 1, 1]> model_4_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_4_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(62784)))];
            tensor<fp16, [64]> model_4_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_4_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71040)))];
            tensor<fp16, [1, 64, 80, 80]> input_29_cast_fp16 = conv(bias = model_4_cv1_conv_bias_to_fp16, dilations = var_158, groups = var_144, pad = input_29_pad_0, pad_type = input_29_pad_type_0, strides = var_156, weight = model_4_cv1_conv_weight_to_fp16, x = input_27_cast_fp16)[name = tensor<string, []>("input_29_cast_fp16")];
            tensor<fp16, []> var_161_alpha_0_to_fp16 = const()[name = tensor<string, []>("op_161_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> var_161_beta_0_to_fp16 = const()[name = tensor<string, []>("op_161_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 64, 80, 80]> var_161_cast_fp16 = clip(alpha = var_161_alpha_0_to_fp16, beta = var_161_beta_0_to_fp16, x = input_29_cast_fp16)[name = tensor<string, []>("op_161_cast_fp16")];
            tensor<int32, [2]> var_162 = const()[name = tensor<string, []>("op_162"), val = tensor<int32, [2]>([32, 32])];
            tensor<int32, []> var_163_axis_0 = const()[name = tensor<string, []>("op_163_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 32, 80, 80]> var_163_cast_fp16_0, tensor<fp16, [1, 32, 80, 80]> var_163_cast_fp16_1 = split(axis = var_163_axis_0, split_sizes = var_162, x = var_161_cast_fp16)[name = tensor<string, []>("op_163_cast_fp16")];
            tensor<int32, [2]> var_171 = const()[name = tensor<string, []>("op_171"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_173 = const()[name = tensor<string, []>("op_173"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_33_pad_type_0 = const()[name = tensor<string, []>("input_33_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_33_pad_0 = const()[name = tensor<string, []>("input_33_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 32, 3, 3]> model_4_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_4_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71232)))];
            tensor<fp16, [32]> model_4_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_4_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89728)))];
            tensor<fp16, [1, 32, 80, 80]> input_33_cast_fp16 = conv(bias = model_4_m_0_cv1_conv_bias_to_fp16, dilations = var_173, groups = var_144, pad = input_33_pad_0, pad_type = input_33_pad_type_0, strides = var_171, weight = model_4_m_0_cv1_conv_weight_to_fp16, x = var_163_cast_fp16_1)[name = tensor<string, []>("input_33_cast_fp16")];
            tensor<fp16, []> input_35_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_35_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_35_beta_0_to_fp16 = const()[name = tensor<string, []>("input_35_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 32, 80, 80]> input_35_cast_fp16 = clip(alpha = input_35_alpha_0_to_fp16, beta = input_35_beta_0_to_fp16, x = input_33_cast_fp16)[name = tensor<string, []>("input_35_cast_fp16")];
            tensor<int32, [2]> var_180 = const()[name = tensor<string, []>("op_180"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_182 = const()[name = tensor<string, []>("op_182"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_37_pad_type_0 = const()[name = tensor<string, []>("input_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_37_pad_0 = const()[name = tensor<string, []>("input_37_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 32, 3, 3]> model_4_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_4_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89856)))];
            tensor<fp16, [32]> model_4_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_4_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(108352)))];
            tensor<fp16, [1, 32, 80, 80]> input_37_cast_fp16 = conv(bias = model_4_m_0_cv2_conv_bias_to_fp16, dilations = var_182, groups = var_144, pad = input_37_pad_0, pad_type = input_37_pad_type_0, strides = var_180, weight = model_4_m_0_cv2_conv_weight_to_fp16, x = input_35_cast_fp16)[name = tensor<string, []>("input_37_cast_fp16")];
            tensor<fp16, []> var_185_alpha_0_to_fp16 = const()[name = tensor<string, []>("op_185_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> var_185_beta_0_to_fp16 = const()[name = tensor<string, []>("op_185_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 32, 80, 80]> var_185_cast_fp16 = clip(alpha = var_185_alpha_0_to_fp16, beta = var_185_beta_0_to_fp16, x = input_37_cast_fp16)[name = tensor<string, []>("op_185_cast_fp16")];
            tensor<fp16, [1, 32, 80, 80]> input_39_cast_fp16 = add(x = var_163_cast_fp16_1, y = var_185_cast_fp16)[name = tensor<string, []>("input_39_cast_fp16")];
            tensor<int32, [2]> var_192 = const()[name = tensor<string, []>("op_192"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_194 = const()[name = tensor<string, []>("op_194"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_41_pad_type_0 = const()[name = tensor<string, []>("input_41_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_41_pad_0 = const()[name = tensor<string, []>("input_41_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 32, 3, 3]> model_4_m_1_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_4_m_1_cv1_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(108480)))];
            tensor<fp16, [32]> model_4_m_1_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_4_m_1_cv1_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(126976)))];
            tensor<fp16, [1, 32, 80, 80]> input_41_cast_fp16 = conv(bias = model_4_m_1_cv1_conv_bias_to_fp16, dilations = var_194, groups = var_144, pad = input_41_pad_0, pad_type = input_41_pad_type_0, strides = var_192, weight = model_4_m_1_cv1_conv_weight_to_fp16, x = input_39_cast_fp16)[name = tensor<string, []>("input_41_cast_fp16")];
            tensor<fp16, []> input_43_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_43_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_43_beta_0_to_fp16 = const()[name = tensor<string, []>("input_43_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 32, 80, 80]> input_43_cast_fp16 = clip(alpha = input_43_alpha_0_to_fp16, beta = input_43_beta_0_to_fp16, x = input_41_cast_fp16)[name = tensor<string, []>("input_43_cast_fp16")];
            tensor<int32, [2]> var_201 = const()[name = tensor<string, []>("op_201"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_203 = const()[name = tensor<string, []>("op_203"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_45_pad_type_0 = const()[name = tensor<string, []>("input_45_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_45_pad_0 = const()[name = tensor<string, []>("input_45_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 32, 3, 3]> model_4_m_1_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_4_m_1_cv2_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(127104)))];
            tensor<fp16, [32]> model_4_m_1_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_4_m_1_cv2_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(145600)))];
            tensor<fp16, [1, 32, 80, 80]> input_45_cast_fp16 = conv(bias = model_4_m_1_cv2_conv_bias_to_fp16, dilations = var_203, groups = var_144, pad = input_45_pad_0, pad_type = input_45_pad_type_0, strides = var_201, weight = model_4_m_1_cv2_conv_weight_to_fp16, x = input_43_cast_fp16)[name = tensor<string, []>("input_45_cast_fp16")];
            tensor<fp16, []> var_206_alpha_0_to_fp16 = const()[name = tensor<string, []>("op_206_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> var_206_beta_0_to_fp16 = const()[name = tensor<string, []>("op_206_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 32, 80, 80]> var_206_cast_fp16 = clip(alpha = var_206_alpha_0_to_fp16, beta = var_206_beta_0_to_fp16, x = input_45_cast_fp16)[name = tensor<string, []>("op_206_cast_fp16")];
            tensor<fp16, [1, 32, 80, 80]> var_207_cast_fp16 = add(x = input_39_cast_fp16, y = var_206_cast_fp16)[name = tensor<string, []>("op_207_cast_fp16")];
            tensor<bool, []> input_47_interleave_0 = const()[name = tensor<string, []>("input_47_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 128, 80, 80]> input_47_cast_fp16 = concat(axis = var_144, interleave = input_47_interleave_0, values = (var_163_cast_fp16_0, var_163_cast_fp16_1, input_39_cast_fp16, var_207_cast_fp16))[name = tensor<string, []>("input_47_cast_fp16")];
            tensor<int32, [2]> var_213 = const()[name = tensor<string, []>("op_213"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_215 = const()[name = tensor<string, []>("op_215"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_49_pad_type_0 = const()[name = tensor<string, []>("input_49_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_49_pad_0 = const()[name = tensor<string, []>("input_49_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 128, 1, 1]> model_4_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_4_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(145728)))];
            tensor<fp16, [64]> model_4_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_4_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(162176)))];
            tensor<fp16, [1, 64, 80, 80]> input_49_cast_fp16 = conv(bias = model_4_cv2_conv_bias_to_fp16, dilations = var_215, groups = var_144, pad = input_49_pad_0, pad_type = input_49_pad_type_0, strides = var_213, weight = model_4_cv2_conv_weight_to_fp16, x = input_47_cast_fp16)[name = tensor<string, []>("input_49_cast_fp16")];
            tensor<fp16, []> input_51_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_51_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_51_beta_0_to_fp16 = const()[name = tensor<string, []>("input_51_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 64, 80, 80]> input_51_cast_fp16 = clip(alpha = input_51_alpha_0_to_fp16, beta = input_51_beta_0_to_fp16, x = input_49_cast_fp16)[name = tensor<string, []>("input_51_cast_fp16")];
            tensor<int32, []> var_222 = const()[name = tensor<string, []>("op_222"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_229 = const()[name = tensor<string, []>("op_229"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_231 = const()[name = tensor<string, []>("op_231"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_53_pad_type_0 = const()[name = tensor<string, []>("input_53_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_53_pad_0 = const()[name = tensor<string, []>("input_53_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 64, 3, 3]> model_5_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_5_conv_weight_to_fp16"), val = tensor<fp16, [128, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(162368)))];
            tensor<fp16, [128]> model_5_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_5_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(309888)))];
            tensor<fp16, [1, 128, 40, 40]> input_53_cast_fp16 = conv(bias = model_5_conv_bias_to_fp16, dilations = var_231, groups = var_222, pad = input_53_pad_0, pad_type = input_53_pad_type_0, strides = var_229, weight = model_5_conv_weight_to_fp16, x = input_51_cast_fp16)[name = tensor<string, []>("input_53_cast_fp16")];
            tensor<fp16, []> input_55_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_55_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_55_beta_0_to_fp16 = const()[name = tensor<string, []>("input_55_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 128, 40, 40]> input_55_cast_fp16 = clip(alpha = input_55_alpha_0_to_fp16, beta = input_55_beta_0_to_fp16, x = input_53_cast_fp16)[name = tensor<string, []>("input_55_cast_fp16")];
            tensor<int32, []> var_239 = const()[name = tensor<string, []>("op_239"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_251 = const()[name = tensor<string, []>("op_251"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_253 = const()[name = tensor<string, []>("op_253"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_57_pad_type_0 = const()[name = tensor<string, []>("input_57_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_57_pad_0 = const()[name = tensor<string, []>("input_57_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 128, 1, 1]> model_6_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_6_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(310208)))];
            tensor<fp16, [128]> model_6_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_6_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(343040)))];
            tensor<fp16, [1, 128, 40, 40]> input_57_cast_fp16 = conv(bias = model_6_cv1_conv_bias_to_fp16, dilations = var_253, groups = var_239, pad = input_57_pad_0, pad_type = input_57_pad_type_0, strides = var_251, weight = model_6_cv1_conv_weight_to_fp16, x = input_55_cast_fp16)[name = tensor<string, []>("input_57_cast_fp16")];
            tensor<fp16, []> var_256_alpha_0_to_fp16 = const()[name = tensor<string, []>("op_256_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> var_256_beta_0_to_fp16 = const()[name = tensor<string, []>("op_256_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 128, 40, 40]> var_256_cast_fp16 = clip(alpha = var_256_alpha_0_to_fp16, beta = var_256_beta_0_to_fp16, x = input_57_cast_fp16)[name = tensor<string, []>("op_256_cast_fp16")];
            tensor<int32, [2]> var_257 = const()[name = tensor<string, []>("op_257"), val = tensor<int32, [2]>([64, 64])];
            tensor<int32, []> var_258_axis_0 = const()[name = tensor<string, []>("op_258_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 40, 40]> var_258_cast_fp16_0, tensor<fp16, [1, 64, 40, 40]> var_258_cast_fp16_1 = split(axis = var_258_axis_0, split_sizes = var_257, x = var_256_cast_fp16)[name = tensor<string, []>("op_258_cast_fp16")];
            tensor<int32, [2]> var_266 = const()[name = tensor<string, []>("op_266"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_268 = const()[name = tensor<string, []>("op_268"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_61_pad_type_0 = const()[name = tensor<string, []>("input_61_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_61_pad_0 = const()[name = tensor<string, []>("input_61_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_6_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_6_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(343360)))];
            tensor<fp16, [64]> model_6_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_6_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(417152)))];
            tensor<fp16, [1, 64, 40, 40]> input_61_cast_fp16 = conv(bias = model_6_m_0_cv1_conv_bias_to_fp16, dilations = var_268, groups = var_239, pad = input_61_pad_0, pad_type = input_61_pad_type_0, strides = var_266, weight = model_6_m_0_cv1_conv_weight_to_fp16, x = var_258_cast_fp16_1)[name = tensor<string, []>("input_61_cast_fp16")];
            tensor<fp16, []> input_63_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_63_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_63_beta_0_to_fp16 = const()[name = tensor<string, []>("input_63_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 64, 40, 40]> input_63_cast_fp16 = clip(alpha = input_63_alpha_0_to_fp16, beta = input_63_beta_0_to_fp16, x = input_61_cast_fp16)[name = tensor<string, []>("input_63_cast_fp16")];
            tensor<int32, [2]> var_275 = const()[name = tensor<string, []>("op_275"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_277 = const()[name = tensor<string, []>("op_277"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_65_pad_type_0 = const()[name = tensor<string, []>("input_65_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_65_pad_0 = const()[name = tensor<string, []>("input_65_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_6_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_6_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(417344)))];
            tensor<fp16, [64]> model_6_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_6_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(491136)))];
            tensor<fp16, [1, 64, 40, 40]> input_65_cast_fp16 = conv(bias = model_6_m_0_cv2_conv_bias_to_fp16, dilations = var_277, groups = var_239, pad = input_65_pad_0, pad_type = input_65_pad_type_0, strides = var_275, weight = model_6_m_0_cv2_conv_weight_to_fp16, x = input_63_cast_fp16)[name = tensor<string, []>("input_65_cast_fp16")];
            tensor<fp16, []> var_280_alpha_0_to_fp16 = const()[name = tensor<string, []>("op_280_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> var_280_beta_0_to_fp16 = const()[name = tensor<string, []>("op_280_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 64, 40, 40]> var_280_cast_fp16 = clip(alpha = var_280_alpha_0_to_fp16, beta = var_280_beta_0_to_fp16, x = input_65_cast_fp16)[name = tensor<string, []>("op_280_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> input_67_cast_fp16 = add(x = var_258_cast_fp16_1, y = var_280_cast_fp16)[name = tensor<string, []>("input_67_cast_fp16")];
            tensor<int32, [2]> var_287 = const()[name = tensor<string, []>("op_287"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_289 = const()[name = tensor<string, []>("op_289"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_69_pad_type_0 = const()[name = tensor<string, []>("input_69_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_69_pad_0 = const()[name = tensor<string, []>("input_69_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_6_m_1_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_6_m_1_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(491328)))];
            tensor<fp16, [64]> model_6_m_1_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_6_m_1_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(565120)))];
            tensor<fp16, [1, 64, 40, 40]> input_69_cast_fp16 = conv(bias = model_6_m_1_cv1_conv_bias_to_fp16, dilations = var_289, groups = var_239, pad = input_69_pad_0, pad_type = input_69_pad_type_0, strides = var_287, weight = model_6_m_1_cv1_conv_weight_to_fp16, x = input_67_cast_fp16)[name = tensor<string, []>("input_69_cast_fp16")];
            tensor<fp16, []> input_71_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_71_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_71_beta_0_to_fp16 = const()[name = tensor<string, []>("input_71_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 64, 40, 40]> input_71_cast_fp16 = clip(alpha = input_71_alpha_0_to_fp16, beta = input_71_beta_0_to_fp16, x = input_69_cast_fp16)[name = tensor<string, []>("input_71_cast_fp16")];
            tensor<int32, [2]> var_296 = const()[name = tensor<string, []>("op_296"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_298 = const()[name = tensor<string, []>("op_298"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_73_pad_type_0 = const()[name = tensor<string, []>("input_73_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_73_pad_0 = const()[name = tensor<string, []>("input_73_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_6_m_1_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_6_m_1_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(565312)))];
            tensor<fp16, [64]> model_6_m_1_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_6_m_1_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(639104)))];
            tensor<fp16, [1, 64, 40, 40]> input_73_cast_fp16 = conv(bias = model_6_m_1_cv2_conv_bias_to_fp16, dilations = var_298, groups = var_239, pad = input_73_pad_0, pad_type = input_73_pad_type_0, strides = var_296, weight = model_6_m_1_cv2_conv_weight_to_fp16, x = input_71_cast_fp16)[name = tensor<string, []>("input_73_cast_fp16")];
            tensor<fp16, []> var_301_alpha_0_to_fp16 = const()[name = tensor<string, []>("op_301_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> var_301_beta_0_to_fp16 = const()[name = tensor<string, []>("op_301_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 64, 40, 40]> var_301_cast_fp16 = clip(alpha = var_301_alpha_0_to_fp16, beta = var_301_beta_0_to_fp16, x = input_73_cast_fp16)[name = tensor<string, []>("op_301_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> var_302_cast_fp16 = add(x = input_67_cast_fp16, y = var_301_cast_fp16)[name = tensor<string, []>("op_302_cast_fp16")];
            tensor<bool, []> input_75_interleave_0 = const()[name = tensor<string, []>("input_75_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 256, 40, 40]> input_75_cast_fp16 = concat(axis = var_239, interleave = input_75_interleave_0, values = (var_258_cast_fp16_0, var_258_cast_fp16_1, input_67_cast_fp16, var_302_cast_fp16))[name = tensor<string, []>("input_75_cast_fp16")];
            tensor<int32, [2]> var_308 = const()[name = tensor<string, []>("op_308"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_310 = const()[name = tensor<string, []>("op_310"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_77_pad_type_0 = const()[name = tensor<string, []>("input_77_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_77_pad_0 = const()[name = tensor<string, []>("input_77_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 256, 1, 1]> model_6_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_6_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(639296)))];
            tensor<fp16, [128]> model_6_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_6_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(704896)))];
            tensor<fp16, [1, 128, 40, 40]> input_77_cast_fp16 = conv(bias = model_6_cv2_conv_bias_to_fp16, dilations = var_310, groups = var_239, pad = input_77_pad_0, pad_type = input_77_pad_type_0, strides = var_308, weight = model_6_cv2_conv_weight_to_fp16, x = input_75_cast_fp16)[name = tensor<string, []>("input_77_cast_fp16")];
            tensor<fp16, []> input_79_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_79_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_79_beta_0_to_fp16 = const()[name = tensor<string, []>("input_79_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 128, 40, 40]> input_79_cast_fp16 = clip(alpha = input_79_alpha_0_to_fp16, beta = input_79_beta_0_to_fp16, x = input_77_cast_fp16)[name = tensor<string, []>("input_79_cast_fp16")];
            tensor<int32, []> var_317 = const()[name = tensor<string, []>("op_317"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_324 = const()[name = tensor<string, []>("op_324"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_326 = const()[name = tensor<string, []>("op_326"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_81_pad_type_0 = const()[name = tensor<string, []>("input_81_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_81_pad_0 = const()[name = tensor<string, []>("input_81_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [256, 128, 3, 3]> model_7_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_7_conv_weight_to_fp16"), val = tensor<fp16, [256, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(705216)))];
            tensor<fp16, [256]> model_7_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_7_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1295104)))];
            tensor<fp16, [1, 256, 20, 20]> input_81_cast_fp16 = conv(bias = model_7_conv_bias_to_fp16, dilations = var_326, groups = var_317, pad = input_81_pad_0, pad_type = input_81_pad_type_0, strides = var_324, weight = model_7_conv_weight_to_fp16, x = input_79_cast_fp16)[name = tensor<string, []>("input_81_cast_fp16")];
            tensor<fp16, []> input_83_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_83_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_83_beta_0_to_fp16 = const()[name = tensor<string, []>("input_83_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 256, 20, 20]> input_83_cast_fp16 = clip(alpha = input_83_alpha_0_to_fp16, beta = input_83_beta_0_to_fp16, x = input_81_cast_fp16)[name = tensor<string, []>("input_83_cast_fp16")];
            tensor<int32, []> var_334 = const()[name = tensor<string, []>("op_334"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_344 = const()[name = tensor<string, []>("op_344"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_346 = const()[name = tensor<string, []>("op_346"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_85_pad_type_0 = const()[name = tensor<string, []>("input_85_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_85_pad_0 = const()[name = tensor<string, []>("input_85_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 256, 1, 1]> model_8_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_8_cv1_conv_weight_to_fp16"), val = tensor<fp16, [256, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1295680)))];
            tensor<fp16, [256]> model_8_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_8_cv1_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1426816)))];
            tensor<fp16, [1, 256, 20, 20]> input_85_cast_fp16 = conv(bias = model_8_cv1_conv_bias_to_fp16, dilations = var_346, groups = var_334, pad = input_85_pad_0, pad_type = input_85_pad_type_0, strides = var_344, weight = model_8_cv1_conv_weight_to_fp16, x = input_83_cast_fp16)[name = tensor<string, []>("input_85_cast_fp16")];
            tensor<fp16, []> var_349_alpha_0_to_fp16 = const()[name = tensor<string, []>("op_349_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> var_349_beta_0_to_fp16 = const()[name = tensor<string, []>("op_349_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 256, 20, 20]> var_349_cast_fp16 = clip(alpha = var_349_alpha_0_to_fp16, beta = var_349_beta_0_to_fp16, x = input_85_cast_fp16)[name = tensor<string, []>("op_349_cast_fp16")];
            tensor<int32, [2]> var_350 = const()[name = tensor<string, []>("op_350"), val = tensor<int32, [2]>([128, 128])];
            tensor<int32, []> var_351_axis_0 = const()[name = tensor<string, []>("op_351_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 128, 20, 20]> var_351_cast_fp16_0, tensor<fp16, [1, 128, 20, 20]> var_351_cast_fp16_1 = split(axis = var_351_axis_0, split_sizes = var_350, x = var_349_cast_fp16)[name = tensor<string, []>("op_351_cast_fp16")];
            tensor<int32, [2]> var_359 = const()[name = tensor<string, []>("op_359"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_361 = const()[name = tensor<string, []>("op_361"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_89_pad_type_0 = const()[name = tensor<string, []>("input_89_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_89_pad_0 = const()[name = tensor<string, []>("input_89_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_8_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_8_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1427392)))];
            tensor<fp16, [128]> model_8_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_8_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1722368)))];
            tensor<fp16, [1, 128, 20, 20]> input_89_cast_fp16 = conv(bias = model_8_m_0_cv1_conv_bias_to_fp16, dilations = var_361, groups = var_334, pad = input_89_pad_0, pad_type = input_89_pad_type_0, strides = var_359, weight = model_8_m_0_cv1_conv_weight_to_fp16, x = var_351_cast_fp16_1)[name = tensor<string, []>("input_89_cast_fp16")];
            tensor<fp16, []> input_91_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_91_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_91_beta_0_to_fp16 = const()[name = tensor<string, []>("input_91_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 128, 20, 20]> input_91_cast_fp16 = clip(alpha = input_91_alpha_0_to_fp16, beta = input_91_beta_0_to_fp16, x = input_89_cast_fp16)[name = tensor<string, []>("input_91_cast_fp16")];
            tensor<int32, [2]> var_368 = const()[name = tensor<string, []>("op_368"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_370 = const()[name = tensor<string, []>("op_370"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_93_pad_type_0 = const()[name = tensor<string, []>("input_93_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_93_pad_0 = const()[name = tensor<string, []>("input_93_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_8_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_8_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1722688)))];
            tensor<fp16, [128]> model_8_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_8_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2017664)))];
            tensor<fp16, [1, 128, 20, 20]> input_93_cast_fp16 = conv(bias = model_8_m_0_cv2_conv_bias_to_fp16, dilations = var_370, groups = var_334, pad = input_93_pad_0, pad_type = input_93_pad_type_0, strides = var_368, weight = model_8_m_0_cv2_conv_weight_to_fp16, x = input_91_cast_fp16)[name = tensor<string, []>("input_93_cast_fp16")];
            tensor<fp16, []> var_373_alpha_0_to_fp16 = const()[name = tensor<string, []>("op_373_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> var_373_beta_0_to_fp16 = const()[name = tensor<string, []>("op_373_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 128, 20, 20]> var_373_cast_fp16 = clip(alpha = var_373_alpha_0_to_fp16, beta = var_373_beta_0_to_fp16, x = input_93_cast_fp16)[name = tensor<string, []>("op_373_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> var_374_cast_fp16 = add(x = var_351_cast_fp16_1, y = var_373_cast_fp16)[name = tensor<string, []>("op_374_cast_fp16")];
            tensor<bool, []> input_95_interleave_0 = const()[name = tensor<string, []>("input_95_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 384, 20, 20]> input_95_cast_fp16 = concat(axis = var_334, interleave = input_95_interleave_0, values = (var_351_cast_fp16_0, var_351_cast_fp16_1, var_374_cast_fp16))[name = tensor<string, []>("input_95_cast_fp16")];
            tensor<int32, [2]> var_380 = const()[name = tensor<string, []>("op_380"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_382 = const()[name = tensor<string, []>("op_382"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_97_pad_type_0 = const()[name = tensor<string, []>("input_97_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_97_pad_0 = const()[name = tensor<string, []>("input_97_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 384, 1, 1]> model_8_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_8_cv2_conv_weight_to_fp16"), val = tensor<fp16, [256, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2017984)))];
            tensor<fp16, [256]> model_8_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_8_cv2_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2214656)))];
            tensor<fp16, [1, 256, 20, 20]> input_97_cast_fp16 = conv(bias = model_8_cv2_conv_bias_to_fp16, dilations = var_382, groups = var_334, pad = input_97_pad_0, pad_type = input_97_pad_type_0, strides = var_380, weight = model_8_cv2_conv_weight_to_fp16, x = input_95_cast_fp16)[name = tensor<string, []>("input_97_cast_fp16")];
            tensor<fp16, []> input_99_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_99_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_99_beta_0_to_fp16 = const()[name = tensor<string, []>("input_99_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 256, 20, 20]> input_99_cast_fp16 = clip(alpha = input_99_alpha_0_to_fp16, beta = input_99_beta_0_to_fp16, x = input_97_cast_fp16)[name = tensor<string, []>("input_99_cast_fp16")];
            tensor<int32, []> var_391 = const()[name = tensor<string, []>("op_391"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_399 = const()[name = tensor<string, []>("op_399"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_401 = const()[name = tensor<string, []>("op_401"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_101_pad_type_0 = const()[name = tensor<string, []>("input_101_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_101_pad_0 = const()[name = tensor<string, []>("input_101_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 256, 1, 1]> model_9_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_9_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2215232)))];
            tensor<fp16, [128]> model_9_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_9_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2280832)))];
            tensor<fp16, [1, 128, 20, 20]> input_101_cast_fp16 = conv(bias = model_9_cv1_conv_bias_to_fp16, dilations = var_401, groups = var_391, pad = input_101_pad_0, pad_type = input_101_pad_type_0, strides = var_399, weight = model_9_cv1_conv_weight_to_fp16, x = input_99_cast_fp16)[name = tensor<string, []>("input_101_cast_fp16")];
            tensor<fp16, []> input_103_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_103_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_103_beta_0_to_fp16 = const()[name = tensor<string, []>("input_103_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 128, 20, 20]> input_103_cast_fp16 = clip(alpha = input_103_alpha_0_to_fp16, beta = input_103_beta_0_to_fp16, x = input_101_cast_fp16)[name = tensor<string, []>("input_103_cast_fp16")];
            tensor<int32, [2]> var_405 = const()[name = tensor<string, []>("op_405"), val = tensor<int32, [2]>([5, 5])];
            tensor<int32, [2]> var_406 = const()[name = tensor<string, []>("op_406"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_105_pad_type_0 = const()[name = tensor<string, []>("input_105_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_105_pad_0 = const()[name = tensor<string, []>("input_105_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<bool, []> input_105_ceil_mode_0 = const()[name = tensor<string, []>("input_105_ceil_mode_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 128, 20, 20]> input_105_cast_fp16 = max_pool(ceil_mode = input_105_ceil_mode_0, kernel_sizes = var_405, pad = input_105_pad_0, pad_type = input_105_pad_type_0, strides = var_406, x = input_103_cast_fp16)[name = tensor<string, []>("input_105_cast_fp16")];
            tensor<int32, [2]> var_410 = const()[name = tensor<string, []>("op_410"), val = tensor<int32, [2]>([5, 5])];
            tensor<int32, [2]> var_411 = const()[name = tensor<string, []>("op_411"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_107_pad_type_0 = const()[name = tensor<string, []>("input_107_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_107_pad_0 = const()[name = tensor<string, []>("input_107_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<bool, []> input_107_ceil_mode_0 = const()[name = tensor<string, []>("input_107_ceil_mode_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 128, 20, 20]> input_107_cast_fp16 = max_pool(ceil_mode = input_107_ceil_mode_0, kernel_sizes = var_410, pad = input_107_pad_0, pad_type = input_107_pad_type_0, strides = var_411, x = input_105_cast_fp16)[name = tensor<string, []>("input_107_cast_fp16")];
            tensor<int32, [2]> var_415 = const()[name = tensor<string, []>("op_415"), val = tensor<int32, [2]>([5, 5])];
            tensor<int32, [2]> var_416 = const()[name = tensor<string, []>("op_416"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_419_pad_type_0 = const()[name = tensor<string, []>("op_419_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_419_pad_0 = const()[name = tensor<string, []>("op_419_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<bool, []> var_419_ceil_mode_0 = const()[name = tensor<string, []>("op_419_ceil_mode_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 128, 20, 20]> var_419_cast_fp16 = max_pool(ceil_mode = var_419_ceil_mode_0, kernel_sizes = var_415, pad = var_419_pad_0, pad_type = var_419_pad_type_0, strides = var_416, x = input_107_cast_fp16)[name = tensor<string, []>("op_419_cast_fp16")];
            tensor<bool, []> input_109_interleave_0 = const()[name = tensor<string, []>("input_109_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 20, 20]> input_109_cast_fp16 = concat(axis = var_391, interleave = input_109_interleave_0, values = (input_103_cast_fp16, input_105_cast_fp16, input_107_cast_fp16, var_419_cast_fp16))[name = tensor<string, []>("input_109_cast_fp16")];
            tensor<int32, [2]> var_425 = const()[name = tensor<string, []>("op_425"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_427 = const()[name = tensor<string, []>("op_427"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_111_pad_type_0 = const()[name = tensor<string, []>("input_111_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_111_pad_0 = const()[name = tensor<string, []>("input_111_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 512, 1, 1]> model_9_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_9_cv2_conv_weight_to_fp16"), val = tensor<fp16, [256, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2281152)))];
            tensor<fp16, [256]> model_9_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_9_cv2_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2543360)))];
            tensor<fp16, [1, 256, 20, 20]> input_111_cast_fp16 = conv(bias = model_9_cv2_conv_bias_to_fp16, dilations = var_427, groups = var_391, pad = input_111_pad_0, pad_type = input_111_pad_type_0, strides = var_425, weight = model_9_cv2_conv_weight_to_fp16, x = input_109_cast_fp16)[name = tensor<string, []>("input_111_cast_fp16")];
            tensor<fp16, []> input_113_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_113_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_113_beta_0_to_fp16 = const()[name = tensor<string, []>("input_113_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 256, 20, 20]> input_113_cast_fp16 = clip(alpha = input_113_alpha_0_to_fp16, beta = input_113_beta_0_to_fp16, x = input_111_cast_fp16)[name = tensor<string, []>("input_113_cast_fp16")];
            tensor<fp32, []> var_434_scale_factor_height_0 = const()[name = tensor<string, []>("op_434_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> var_434_scale_factor_width_0 = const()[name = tensor<string, []>("op_434_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [1, 256, 40, 40]> var_434_cast_fp16 = upsample_nearest_neighbor(scale_factor_height = var_434_scale_factor_height_0, scale_factor_width = var_434_scale_factor_width_0, x = input_113_cast_fp16)[name = tensor<string, []>("op_434_cast_fp16")];
            tensor<int32, []> var_435 = const()[name = tensor<string, []>("op_435"), val = tensor<int32, []>(1)];
            tensor<bool, []> input_115_interleave_0 = const()[name = tensor<string, []>("input_115_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 384, 40, 40]> input_115_cast_fp16 = concat(axis = var_435, interleave = input_115_interleave_0, values = (var_434_cast_fp16, input_79_cast_fp16))[name = tensor<string, []>("input_115_cast_fp16")];
            tensor<int32, []> var_442 = const()[name = tensor<string, []>("op_442"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_452 = const()[name = tensor<string, []>("op_452"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_454 = const()[name = tensor<string, []>("op_454"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_117_pad_type_0 = const()[name = tensor<string, []>("input_117_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_117_pad_0 = const()[name = tensor<string, []>("input_117_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 384, 1, 1]> model_12_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_12_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2543936)))];
            tensor<fp16, [128]> model_12_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_12_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2642304)))];
            tensor<fp16, [1, 128, 40, 40]> input_117_cast_fp16 = conv(bias = model_12_cv1_conv_bias_to_fp16, dilations = var_454, groups = var_442, pad = input_117_pad_0, pad_type = input_117_pad_type_0, strides = var_452, weight = model_12_cv1_conv_weight_to_fp16, x = input_115_cast_fp16)[name = tensor<string, []>("input_117_cast_fp16")];
            tensor<fp16, []> var_457_alpha_0_to_fp16 = const()[name = tensor<string, []>("op_457_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> var_457_beta_0_to_fp16 = const()[name = tensor<string, []>("op_457_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 128, 40, 40]> var_457_cast_fp16 = clip(alpha = var_457_alpha_0_to_fp16, beta = var_457_beta_0_to_fp16, x = input_117_cast_fp16)[name = tensor<string, []>("op_457_cast_fp16")];
            tensor<int32, [2]> var_458 = const()[name = tensor<string, []>("op_458"), val = tensor<int32, [2]>([64, 64])];
            tensor<int32, []> var_459_axis_0 = const()[name = tensor<string, []>("op_459_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 40, 40]> var_459_cast_fp16_0, tensor<fp16, [1, 64, 40, 40]> var_459_cast_fp16_1 = split(axis = var_459_axis_0, split_sizes = var_458, x = var_457_cast_fp16)[name = tensor<string, []>("op_459_cast_fp16")];
            tensor<int32, [2]> var_467 = const()[name = tensor<string, []>("op_467"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_469 = const()[name = tensor<string, []>("op_469"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_121_pad_type_0 = const()[name = tensor<string, []>("input_121_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_121_pad_0 = const()[name = tensor<string, []>("input_121_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_12_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_12_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2642624)))];
            tensor<fp16, [64]> model_12_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_12_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2716416)))];
            tensor<fp16, [1, 64, 40, 40]> input_121_cast_fp16 = conv(bias = model_12_m_0_cv1_conv_bias_to_fp16, dilations = var_469, groups = var_442, pad = input_121_pad_0, pad_type = input_121_pad_type_0, strides = var_467, weight = model_12_m_0_cv1_conv_weight_to_fp16, x = var_459_cast_fp16_1)[name = tensor<string, []>("input_121_cast_fp16")];
            tensor<fp16, []> input_123_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_123_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_123_beta_0_to_fp16 = const()[name = tensor<string, []>("input_123_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 64, 40, 40]> input_123_cast_fp16 = clip(alpha = input_123_alpha_0_to_fp16, beta = input_123_beta_0_to_fp16, x = input_121_cast_fp16)[name = tensor<string, []>("input_123_cast_fp16")];
            tensor<int32, [2]> var_476 = const()[name = tensor<string, []>("op_476"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_478 = const()[name = tensor<string, []>("op_478"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_125_pad_type_0 = const()[name = tensor<string, []>("input_125_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_125_pad_0 = const()[name = tensor<string, []>("input_125_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_12_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_12_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2716608)))];
            tensor<fp16, [64]> model_12_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_12_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2790400)))];
            tensor<fp16, [1, 64, 40, 40]> input_125_cast_fp16 = conv(bias = model_12_m_0_cv2_conv_bias_to_fp16, dilations = var_478, groups = var_442, pad = input_125_pad_0, pad_type = input_125_pad_type_0, strides = var_476, weight = model_12_m_0_cv2_conv_weight_to_fp16, x = input_123_cast_fp16)[name = tensor<string, []>("input_125_cast_fp16")];
            tensor<fp16, []> var_481_alpha_0_to_fp16 = const()[name = tensor<string, []>("op_481_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> var_481_beta_0_to_fp16 = const()[name = tensor<string, []>("op_481_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 64, 40, 40]> var_481_cast_fp16 = clip(alpha = var_481_alpha_0_to_fp16, beta = var_481_beta_0_to_fp16, x = input_125_cast_fp16)[name = tensor<string, []>("op_481_cast_fp16")];
            tensor<bool, []> input_127_interleave_0 = const()[name = tensor<string, []>("input_127_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 192, 40, 40]> input_127_cast_fp16 = concat(axis = var_442, interleave = input_127_interleave_0, values = (var_459_cast_fp16_0, var_459_cast_fp16_1, var_481_cast_fp16))[name = tensor<string, []>("input_127_cast_fp16")];
            tensor<int32, [2]> var_487 = const()[name = tensor<string, []>("op_487"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_489 = const()[name = tensor<string, []>("op_489"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_129_pad_type_0 = const()[name = tensor<string, []>("input_129_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_129_pad_0 = const()[name = tensor<string, []>("input_129_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 192, 1, 1]> model_12_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_12_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 192, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2790592)))];
            tensor<fp16, [128]> model_12_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_12_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2839808)))];
            tensor<fp16, [1, 128, 40, 40]> input_129_cast_fp16 = conv(bias = model_12_cv2_conv_bias_to_fp16, dilations = var_489, groups = var_442, pad = input_129_pad_0, pad_type = input_129_pad_type_0, strides = var_487, weight = model_12_cv2_conv_weight_to_fp16, x = input_127_cast_fp16)[name = tensor<string, []>("input_129_cast_fp16")];
            tensor<fp16, []> input_131_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_131_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_131_beta_0_to_fp16 = const()[name = tensor<string, []>("input_131_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 128, 40, 40]> input_131_cast_fp16 = clip(alpha = input_131_alpha_0_to_fp16, beta = input_131_beta_0_to_fp16, x = input_129_cast_fp16)[name = tensor<string, []>("input_131_cast_fp16")];
            tensor<fp32, []> var_496_scale_factor_height_0 = const()[name = tensor<string, []>("op_496_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> var_496_scale_factor_width_0 = const()[name = tensor<string, []>("op_496_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [1, 128, 80, 80]> var_496_cast_fp16 = upsample_nearest_neighbor(scale_factor_height = var_496_scale_factor_height_0, scale_factor_width = var_496_scale_factor_width_0, x = input_131_cast_fp16)[name = tensor<string, []>("op_496_cast_fp16")];
            tensor<int32, []> var_497 = const()[name = tensor<string, []>("op_497"), val = tensor<int32, []>(1)];
            tensor<bool, []> input_133_interleave_0 = const()[name = tensor<string, []>("input_133_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 192, 80, 80]> input_133_cast_fp16 = concat(axis = var_497, interleave = input_133_interleave_0, values = (var_496_cast_fp16, input_51_cast_fp16))[name = tensor<string, []>("input_133_cast_fp16")];
            tensor<int32, []> var_504 = const()[name = tensor<string, []>("op_504"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_514 = const()[name = tensor<string, []>("op_514"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_516 = const()[name = tensor<string, []>("op_516"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_135_pad_type_0 = const()[name = tensor<string, []>("input_135_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_135_pad_0 = const()[name = tensor<string, []>("input_135_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 192, 1, 1]> model_15_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_15_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 192, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2840128)))];
            tensor<fp16, [64]> model_15_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_15_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2864768)))];
            tensor<fp16, [1, 64, 80, 80]> input_135_cast_fp16 = conv(bias = model_15_cv1_conv_bias_to_fp16, dilations = var_516, groups = var_504, pad = input_135_pad_0, pad_type = input_135_pad_type_0, strides = var_514, weight = model_15_cv1_conv_weight_to_fp16, x = input_133_cast_fp16)[name = tensor<string, []>("input_135_cast_fp16")];
            tensor<fp16, []> var_519_alpha_0_to_fp16 = const()[name = tensor<string, []>("op_519_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> var_519_beta_0_to_fp16 = const()[name = tensor<string, []>("op_519_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 64, 80, 80]> var_519_cast_fp16 = clip(alpha = var_519_alpha_0_to_fp16, beta = var_519_beta_0_to_fp16, x = input_135_cast_fp16)[name = tensor<string, []>("op_519_cast_fp16")];
            tensor<int32, [2]> var_520 = const()[name = tensor<string, []>("op_520"), val = tensor<int32, [2]>([32, 32])];
            tensor<int32, []> var_521_axis_0 = const()[name = tensor<string, []>("op_521_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 32, 80, 80]> var_521_cast_fp16_0, tensor<fp16, [1, 32, 80, 80]> var_521_cast_fp16_1 = split(axis = var_521_axis_0, split_sizes = var_520, x = var_519_cast_fp16)[name = tensor<string, []>("op_521_cast_fp16")];
            tensor<int32, [2]> var_529 = const()[name = tensor<string, []>("op_529"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_531 = const()[name = tensor<string, []>("op_531"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_139_pad_type_0 = const()[name = tensor<string, []>("input_139_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_139_pad_0 = const()[name = tensor<string, []>("input_139_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 32, 3, 3]> model_15_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_15_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2864960)))];
            tensor<fp16, [32]> model_15_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_15_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2883456)))];
            tensor<fp16, [1, 32, 80, 80]> input_139_cast_fp16 = conv(bias = model_15_m_0_cv1_conv_bias_to_fp16, dilations = var_531, groups = var_504, pad = input_139_pad_0, pad_type = input_139_pad_type_0, strides = var_529, weight = model_15_m_0_cv1_conv_weight_to_fp16, x = var_521_cast_fp16_1)[name = tensor<string, []>("input_139_cast_fp16")];
            tensor<fp16, []> input_141_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_141_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_141_beta_0_to_fp16 = const()[name = tensor<string, []>("input_141_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 32, 80, 80]> input_141_cast_fp16 = clip(alpha = input_141_alpha_0_to_fp16, beta = input_141_beta_0_to_fp16, x = input_139_cast_fp16)[name = tensor<string, []>("input_141_cast_fp16")];
            tensor<int32, [2]> var_538 = const()[name = tensor<string, []>("op_538"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_540 = const()[name = tensor<string, []>("op_540"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_143_pad_type_0 = const()[name = tensor<string, []>("input_143_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_143_pad_0 = const()[name = tensor<string, []>("input_143_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 32, 3, 3]> model_15_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_15_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2883584)))];
            tensor<fp16, [32]> model_15_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_15_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2902080)))];
            tensor<fp16, [1, 32, 80, 80]> input_143_cast_fp16 = conv(bias = model_15_m_0_cv2_conv_bias_to_fp16, dilations = var_540, groups = var_504, pad = input_143_pad_0, pad_type = input_143_pad_type_0, strides = var_538, weight = model_15_m_0_cv2_conv_weight_to_fp16, x = input_141_cast_fp16)[name = tensor<string, []>("input_143_cast_fp16")];
            tensor<fp16, []> var_543_alpha_0_to_fp16 = const()[name = tensor<string, []>("op_543_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> var_543_beta_0_to_fp16 = const()[name = tensor<string, []>("op_543_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 32, 80, 80]> var_543_cast_fp16 = clip(alpha = var_543_alpha_0_to_fp16, beta = var_543_beta_0_to_fp16, x = input_143_cast_fp16)[name = tensor<string, []>("op_543_cast_fp16")];
            tensor<bool, []> input_145_interleave_0 = const()[name = tensor<string, []>("input_145_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 96, 80, 80]> input_145_cast_fp16 = concat(axis = var_504, interleave = input_145_interleave_0, values = (var_521_cast_fp16_0, var_521_cast_fp16_1, var_543_cast_fp16))[name = tensor<string, []>("input_145_cast_fp16")];
            tensor<int32, [2]> var_549 = const()[name = tensor<string, []>("op_549"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_551 = const()[name = tensor<string, []>("op_551"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_147_pad_type_0 = const()[name = tensor<string, []>("input_147_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_147_pad_0 = const()[name = tensor<string, []>("input_147_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 96, 1, 1]> model_15_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_15_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 96, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2902208)))];
            tensor<fp16, [64]> model_15_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_15_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2914560)))];
            tensor<fp16, [1, 64, 80, 80]> input_147_cast_fp16 = conv(bias = model_15_cv2_conv_bias_to_fp16, dilations = var_551, groups = var_504, pad = input_147_pad_0, pad_type = input_147_pad_type_0, strides = var_549, weight = model_15_cv2_conv_weight_to_fp16, x = input_145_cast_fp16)[name = tensor<string, []>("input_147_cast_fp16")];
            tensor<fp16, []> input_149_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_149_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_149_beta_0_to_fp16 = const()[name = tensor<string, []>("input_149_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 64, 80, 80]> input_149_cast_fp16 = clip(alpha = input_149_alpha_0_to_fp16, beta = input_149_beta_0_to_fp16, x = input_147_cast_fp16)[name = tensor<string, []>("input_149_cast_fp16")];
            tensor<int32, []> var_558 = const()[name = tensor<string, []>("op_558"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_565 = const()[name = tensor<string, []>("op_565"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_567 = const()[name = tensor<string, []>("op_567"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_151_pad_type_0 = const()[name = tensor<string, []>("input_151_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_151_pad_0 = const()[name = tensor<string, []>("input_151_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_16_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_16_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2914752)))];
            tensor<fp16, [64]> model_16_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_16_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2988544)))];
            tensor<fp16, [1, 64, 40, 40]> input_151_cast_fp16 = conv(bias = model_16_conv_bias_to_fp16, dilations = var_567, groups = var_558, pad = input_151_pad_0, pad_type = input_151_pad_type_0, strides = var_565, weight = model_16_conv_weight_to_fp16, x = input_149_cast_fp16)[name = tensor<string, []>("input_151_cast_fp16")];
            tensor<fp16, []> var_570_alpha_0_to_fp16 = const()[name = tensor<string, []>("op_570_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> var_570_beta_0_to_fp16 = const()[name = tensor<string, []>("op_570_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 64, 40, 40]> var_570_cast_fp16 = clip(alpha = var_570_alpha_0_to_fp16, beta = var_570_beta_0_to_fp16, x = input_151_cast_fp16)[name = tensor<string, []>("op_570_cast_fp16")];
            tensor<int32, []> var_571 = const()[name = tensor<string, []>("op_571"), val = tensor<int32, []>(1)];
            tensor<bool, []> input_153_interleave_0 = const()[name = tensor<string, []>("input_153_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 192, 40, 40]> input_153_cast_fp16 = concat(axis = var_571, interleave = input_153_interleave_0, values = (var_570_cast_fp16, input_131_cast_fp16))[name = tensor<string, []>("input_153_cast_fp16")];
            tensor<int32, []> var_578 = const()[name = tensor<string, []>("op_578"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_588 = const()[name = tensor<string, []>("op_588"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_590 = const()[name = tensor<string, []>("op_590"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_155_pad_type_0 = const()[name = tensor<string, []>("input_155_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_155_pad_0 = const()[name = tensor<string, []>("input_155_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 192, 1, 1]> model_18_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_18_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 192, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2988736)))];
            tensor<fp16, [128]> model_18_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_18_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3037952)))];
            tensor<fp16, [1, 128, 40, 40]> input_155_cast_fp16 = conv(bias = model_18_cv1_conv_bias_to_fp16, dilations = var_590, groups = var_578, pad = input_155_pad_0, pad_type = input_155_pad_type_0, strides = var_588, weight = model_18_cv1_conv_weight_to_fp16, x = input_153_cast_fp16)[name = tensor<string, []>("input_155_cast_fp16")];
            tensor<fp16, []> var_593_alpha_0_to_fp16 = const()[name = tensor<string, []>("op_593_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> var_593_beta_0_to_fp16 = const()[name = tensor<string, []>("op_593_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 128, 40, 40]> var_593_cast_fp16 = clip(alpha = var_593_alpha_0_to_fp16, beta = var_593_beta_0_to_fp16, x = input_155_cast_fp16)[name = tensor<string, []>("op_593_cast_fp16")];
            tensor<int32, [2]> var_594 = const()[name = tensor<string, []>("op_594"), val = tensor<int32, [2]>([64, 64])];
            tensor<int32, []> var_595_axis_0 = const()[name = tensor<string, []>("op_595_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 40, 40]> var_595_cast_fp16_0, tensor<fp16, [1, 64, 40, 40]> var_595_cast_fp16_1 = split(axis = var_595_axis_0, split_sizes = var_594, x = var_593_cast_fp16)[name = tensor<string, []>("op_595_cast_fp16")];
            tensor<int32, [2]> var_603 = const()[name = tensor<string, []>("op_603"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_605 = const()[name = tensor<string, []>("op_605"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_159_pad_type_0 = const()[name = tensor<string, []>("input_159_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_159_pad_0 = const()[name = tensor<string, []>("input_159_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_18_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_18_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3038272)))];
            tensor<fp16, [64]> model_18_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_18_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3112064)))];
            tensor<fp16, [1, 64, 40, 40]> input_159_cast_fp16 = conv(bias = model_18_m_0_cv1_conv_bias_to_fp16, dilations = var_605, groups = var_578, pad = input_159_pad_0, pad_type = input_159_pad_type_0, strides = var_603, weight = model_18_m_0_cv1_conv_weight_to_fp16, x = var_595_cast_fp16_1)[name = tensor<string, []>("input_159_cast_fp16")];
            tensor<fp16, []> input_161_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_161_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_161_beta_0_to_fp16 = const()[name = tensor<string, []>("input_161_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 64, 40, 40]> input_161_cast_fp16 = clip(alpha = input_161_alpha_0_to_fp16, beta = input_161_beta_0_to_fp16, x = input_159_cast_fp16)[name = tensor<string, []>("input_161_cast_fp16")];
            tensor<int32, [2]> var_612 = const()[name = tensor<string, []>("op_612"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_614 = const()[name = tensor<string, []>("op_614"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_163_pad_type_0 = const()[name = tensor<string, []>("input_163_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_163_pad_0 = const()[name = tensor<string, []>("input_163_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_18_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_18_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3112256)))];
            tensor<fp16, [64]> model_18_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_18_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3186048)))];
            tensor<fp16, [1, 64, 40, 40]> input_163_cast_fp16 = conv(bias = model_18_m_0_cv2_conv_bias_to_fp16, dilations = var_614, groups = var_578, pad = input_163_pad_0, pad_type = input_163_pad_type_0, strides = var_612, weight = model_18_m_0_cv2_conv_weight_to_fp16, x = input_161_cast_fp16)[name = tensor<string, []>("input_163_cast_fp16")];
            tensor<fp16, []> var_617_alpha_0_to_fp16 = const()[name = tensor<string, []>("op_617_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> var_617_beta_0_to_fp16 = const()[name = tensor<string, []>("op_617_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 64, 40, 40]> var_617_cast_fp16 = clip(alpha = var_617_alpha_0_to_fp16, beta = var_617_beta_0_to_fp16, x = input_163_cast_fp16)[name = tensor<string, []>("op_617_cast_fp16")];
            tensor<bool, []> input_165_interleave_0 = const()[name = tensor<string, []>("input_165_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 192, 40, 40]> input_165_cast_fp16 = concat(axis = var_578, interleave = input_165_interleave_0, values = (var_595_cast_fp16_0, var_595_cast_fp16_1, var_617_cast_fp16))[name = tensor<string, []>("input_165_cast_fp16")];
            tensor<int32, [2]> var_623 = const()[name = tensor<string, []>("op_623"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_625 = const()[name = tensor<string, []>("op_625"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_167_pad_type_0 = const()[name = tensor<string, []>("input_167_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_167_pad_0 = const()[name = tensor<string, []>("input_167_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 192, 1, 1]> model_18_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_18_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 192, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3186240)))];
            tensor<fp16, [128]> model_18_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_18_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3235456)))];
            tensor<fp16, [1, 128, 40, 40]> input_167_cast_fp16 = conv(bias = model_18_cv2_conv_bias_to_fp16, dilations = var_625, groups = var_578, pad = input_167_pad_0, pad_type = input_167_pad_type_0, strides = var_623, weight = model_18_cv2_conv_weight_to_fp16, x = input_165_cast_fp16)[name = tensor<string, []>("input_167_cast_fp16")];
            tensor<fp16, []> input_169_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_169_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_169_beta_0_to_fp16 = const()[name = tensor<string, []>("input_169_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 128, 40, 40]> input_169_cast_fp16 = clip(alpha = input_169_alpha_0_to_fp16, beta = input_169_beta_0_to_fp16, x = input_167_cast_fp16)[name = tensor<string, []>("input_169_cast_fp16")];
            tensor<int32, []> var_632 = const()[name = tensor<string, []>("op_632"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_639 = const()[name = tensor<string, []>("op_639"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_641 = const()[name = tensor<string, []>("op_641"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_171_pad_type_0 = const()[name = tensor<string, []>("input_171_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_171_pad_0 = const()[name = tensor<string, []>("input_171_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_19_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_19_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3235776)))];
            tensor<fp16, [128]> model_19_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_19_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3530752)))];
            tensor<fp16, [1, 128, 20, 20]> input_171_cast_fp16 = conv(bias = model_19_conv_bias_to_fp16, dilations = var_641, groups = var_632, pad = input_171_pad_0, pad_type = input_171_pad_type_0, strides = var_639, weight = model_19_conv_weight_to_fp16, x = input_169_cast_fp16)[name = tensor<string, []>("input_171_cast_fp16")];
            tensor<fp16, []> var_644_alpha_0_to_fp16 = const()[name = tensor<string, []>("op_644_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> var_644_beta_0_to_fp16 = const()[name = tensor<string, []>("op_644_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 128, 20, 20]> var_644_cast_fp16 = clip(alpha = var_644_alpha_0_to_fp16, beta = var_644_beta_0_to_fp16, x = input_171_cast_fp16)[name = tensor<string, []>("op_644_cast_fp16")];
            tensor<int32, []> var_645 = const()[name = tensor<string, []>("op_645"), val = tensor<int32, []>(1)];
            tensor<bool, []> input_173_interleave_0 = const()[name = tensor<string, []>("input_173_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 384, 20, 20]> input_173_cast_fp16 = concat(axis = var_645, interleave = input_173_interleave_0, values = (var_644_cast_fp16, input_113_cast_fp16))[name = tensor<string, []>("input_173_cast_fp16")];
            tensor<int32, []> var_652 = const()[name = tensor<string, []>("op_652"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_662 = const()[name = tensor<string, []>("op_662"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_664 = const()[name = tensor<string, []>("op_664"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_175_pad_type_0 = const()[name = tensor<string, []>("input_175_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_175_pad_0 = const()[name = tensor<string, []>("input_175_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 384, 1, 1]> model_21_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_21_cv1_conv_weight_to_fp16"), val = tensor<fp16, [256, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3531072)))];
            tensor<fp16, [256]> model_21_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_21_cv1_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3727744)))];
            tensor<fp16, [1, 256, 20, 20]> input_175_cast_fp16 = conv(bias = model_21_cv1_conv_bias_to_fp16, dilations = var_664, groups = var_652, pad = input_175_pad_0, pad_type = input_175_pad_type_0, strides = var_662, weight = model_21_cv1_conv_weight_to_fp16, x = input_173_cast_fp16)[name = tensor<string, []>("input_175_cast_fp16")];
            tensor<fp16, []> var_667_alpha_0_to_fp16 = const()[name = tensor<string, []>("op_667_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> var_667_beta_0_to_fp16 = const()[name = tensor<string, []>("op_667_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 256, 20, 20]> var_667_cast_fp16 = clip(alpha = var_667_alpha_0_to_fp16, beta = var_667_beta_0_to_fp16, x = input_175_cast_fp16)[name = tensor<string, []>("op_667_cast_fp16")];
            tensor<int32, [2]> var_668 = const()[name = tensor<string, []>("op_668"), val = tensor<int32, [2]>([128, 128])];
            tensor<int32, []> var_669_axis_0 = const()[name = tensor<string, []>("op_669_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 128, 20, 20]> var_669_cast_fp16_0, tensor<fp16, [1, 128, 20, 20]> var_669_cast_fp16_1 = split(axis = var_669_axis_0, split_sizes = var_668, x = var_667_cast_fp16)[name = tensor<string, []>("op_669_cast_fp16")];
            tensor<int32, [2]> var_677 = const()[name = tensor<string, []>("op_677"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_679 = const()[name = tensor<string, []>("op_679"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_179_pad_type_0 = const()[name = tensor<string, []>("input_179_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_179_pad_0 = const()[name = tensor<string, []>("input_179_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_21_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_21_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3728320)))];
            tensor<fp16, [128]> model_21_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_21_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4023296)))];
            tensor<fp16, [1, 128, 20, 20]> input_179_cast_fp16 = conv(bias = model_21_m_0_cv1_conv_bias_to_fp16, dilations = var_679, groups = var_652, pad = input_179_pad_0, pad_type = input_179_pad_type_0, strides = var_677, weight = model_21_m_0_cv1_conv_weight_to_fp16, x = var_669_cast_fp16_1)[name = tensor<string, []>("input_179_cast_fp16")];
            tensor<fp16, []> input_181_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_181_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_181_beta_0_to_fp16 = const()[name = tensor<string, []>("input_181_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 128, 20, 20]> input_181_cast_fp16 = clip(alpha = input_181_alpha_0_to_fp16, beta = input_181_beta_0_to_fp16, x = input_179_cast_fp16)[name = tensor<string, []>("input_181_cast_fp16")];
            tensor<int32, [2]> var_686 = const()[name = tensor<string, []>("op_686"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_688 = const()[name = tensor<string, []>("op_688"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_183_pad_type_0 = const()[name = tensor<string, []>("input_183_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_183_pad_0 = const()[name = tensor<string, []>("input_183_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_21_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_21_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4023616)))];
            tensor<fp16, [128]> model_21_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_21_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4318592)))];
            tensor<fp16, [1, 128, 20, 20]> input_183_cast_fp16 = conv(bias = model_21_m_0_cv2_conv_bias_to_fp16, dilations = var_688, groups = var_652, pad = input_183_pad_0, pad_type = input_183_pad_type_0, strides = var_686, weight = model_21_m_0_cv2_conv_weight_to_fp16, x = input_181_cast_fp16)[name = tensor<string, []>("input_183_cast_fp16")];
            tensor<fp16, []> var_691_alpha_0_to_fp16 = const()[name = tensor<string, []>("op_691_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> var_691_beta_0_to_fp16 = const()[name = tensor<string, []>("op_691_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 128, 20, 20]> var_691_cast_fp16 = clip(alpha = var_691_alpha_0_to_fp16, beta = var_691_beta_0_to_fp16, x = input_183_cast_fp16)[name = tensor<string, []>("op_691_cast_fp16")];
            tensor<bool, []> input_185_interleave_0 = const()[name = tensor<string, []>("input_185_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 384, 20, 20]> input_185_cast_fp16 = concat(axis = var_652, interleave = input_185_interleave_0, values = (var_669_cast_fp16_0, var_669_cast_fp16_1, var_691_cast_fp16))[name = tensor<string, []>("input_185_cast_fp16")];
            tensor<int32, [2]> var_697 = const()[name = tensor<string, []>("op_697"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_699 = const()[name = tensor<string, []>("op_699"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_187_pad_type_0 = const()[name = tensor<string, []>("input_187_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_187_pad_0 = const()[name = tensor<string, []>("input_187_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 384, 1, 1]> model_21_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_21_cv2_conv_weight_to_fp16"), val = tensor<fp16, [256, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4318912)))];
            tensor<fp16, [256]> model_21_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_21_cv2_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4515584)))];
            tensor<fp16, [1, 256, 20, 20]> input_187_cast_fp16 = conv(bias = model_21_cv2_conv_bias_to_fp16, dilations = var_699, groups = var_652, pad = input_187_pad_0, pad_type = input_187_pad_type_0, strides = var_697, weight = model_21_cv2_conv_weight_to_fp16, x = input_185_cast_fp16)[name = tensor<string, []>("input_187_cast_fp16")];
            tensor<fp16, []> input_221_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_221_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_221_beta_0_to_fp16 = const()[name = tensor<string, []>("input_221_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 256, 20, 20]> input_221_cast_fp16 = clip(alpha = input_221_alpha_0_to_fp16, beta = input_221_beta_0_to_fp16, x = input_187_cast_fp16)[name = tensor<string, []>("input_221_cast_fp16")];
            tensor<int32, []> var_709 = const()[name = tensor<string, []>("op_709"), val = tensor<int32, []>(2)];
            tensor<int32, []> var_714 = const()[name = tensor<string, []>("op_714"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_737 = const()[name = tensor<string, []>("op_737"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_739 = const()[name = tensor<string, []>("op_739"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_189_pad_type_0 = const()[name = tensor<string, []>("input_189_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_189_pad_0 = const()[name = tensor<string, []>("input_189_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_22_cv2_0_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_0_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4516160)))];
            tensor<fp16, [64]> model_22_cv2_0_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_0_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4589952)))];
            tensor<fp16, [1, 64, 80, 80]> input_189_cast_fp16 = conv(bias = model_22_cv2_0_0_conv_bias_to_fp16, dilations = var_739, groups = var_714, pad = input_189_pad_0, pad_type = input_189_pad_type_0, strides = var_737, weight = model_22_cv2_0_0_conv_weight_to_fp16, x = input_149_cast_fp16)[name = tensor<string, []>("input_189_cast_fp16")];
            tensor<fp16, []> input_191_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_191_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_191_beta_0_to_fp16 = const()[name = tensor<string, []>("input_191_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 64, 80, 80]> input_191_cast_fp16 = clip(alpha = input_191_alpha_0_to_fp16, beta = input_191_beta_0_to_fp16, x = input_189_cast_fp16)[name = tensor<string, []>("input_191_cast_fp16")];
            tensor<int32, [2]> var_746 = const()[name = tensor<string, []>("op_746"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_748 = const()[name = tensor<string, []>("op_748"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_193_pad_type_0 = const()[name = tensor<string, []>("input_193_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_193_pad_0 = const()[name = tensor<string, []>("input_193_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_22_cv2_0_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_0_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4590144)))];
            tensor<fp16, [64]> model_22_cv2_0_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_0_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4663936)))];
            tensor<fp16, [1, 64, 80, 80]> input_193_cast_fp16 = conv(bias = model_22_cv2_0_1_conv_bias_to_fp16, dilations = var_748, groups = var_714, pad = input_193_pad_0, pad_type = input_193_pad_type_0, strides = var_746, weight = model_22_cv2_0_1_conv_weight_to_fp16, x = input_191_cast_fp16)[name = tensor<string, []>("input_193_cast_fp16")];
            tensor<fp16, []> input_195_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_195_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_195_beta_0_to_fp16 = const()[name = tensor<string, []>("input_195_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 64, 80, 80]> input_195_cast_fp16 = clip(alpha = input_195_alpha_0_to_fp16, beta = input_195_beta_0_to_fp16, x = input_193_cast_fp16)[name = tensor<string, []>("input_195_cast_fp16")];
            tensor<int32, [2]> var_754 = const()[name = tensor<string, []>("op_754"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_756 = const()[name = tensor<string, []>("op_756"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_758_pad_type_0 = const()[name = tensor<string, []>("op_758_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_758_pad_0 = const()[name = tensor<string, []>("op_758_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 64, 1, 1]> model_22_cv2_0_2_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_0_2_weight_to_fp16"), val = tensor<fp16, [64, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4664128)))];
            tensor<fp16, [64]> model_22_cv2_0_2_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_0_2_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4672384)))];
            tensor<fp16, [1, 64, 80, 80]> var_758_cast_fp16 = conv(bias = model_22_cv2_0_2_bias_to_fp16, dilations = var_756, groups = var_714, pad = var_758_pad_0, pad_type = var_758_pad_type_0, strides = var_754, weight = model_22_cv2_0_2_weight_to_fp16, x = input_195_cast_fp16)[name = tensor<string, []>("op_758_cast_fp16")];
            tensor<int32, [2]> var_765 = const()[name = tensor<string, []>("op_765"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_767 = const()[name = tensor<string, []>("op_767"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_197_pad_type_0 = const()[name = tensor<string, []>("input_197_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_197_pad_0 = const()[name = tensor<string, []>("input_197_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_22_cv3_0_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_0_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4672576)))];
            tensor<fp16, [64]> model_22_cv3_0_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_0_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4746368)))];
            tensor<fp16, [1, 64, 80, 80]> input_197_cast_fp16 = conv(bias = model_22_cv3_0_0_conv_bias_to_fp16, dilations = var_767, groups = var_714, pad = input_197_pad_0, pad_type = input_197_pad_type_0, strides = var_765, weight = model_22_cv3_0_0_conv_weight_to_fp16, x = input_149_cast_fp16)[name = tensor<string, []>("input_197_cast_fp16")];
            tensor<fp16, []> input_199_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_199_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_199_beta_0_to_fp16 = const()[name = tensor<string, []>("input_199_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 64, 80, 80]> input_199_cast_fp16 = clip(alpha = input_199_alpha_0_to_fp16, beta = input_199_beta_0_to_fp16, x = input_197_cast_fp16)[name = tensor<string, []>("input_199_cast_fp16")];
            tensor<int32, [2]> var_774 = const()[name = tensor<string, []>("op_774"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_776 = const()[name = tensor<string, []>("op_776"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_201_pad_type_0 = const()[name = tensor<string, []>("input_201_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_201_pad_0 = const()[name = tensor<string, []>("input_201_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_22_cv3_0_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_0_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4746560)))];
            tensor<fp16, [64]> model_22_cv3_0_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_0_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4820352)))];
            tensor<fp16, [1, 64, 80, 80]> input_201_cast_fp16 = conv(bias = model_22_cv3_0_1_conv_bias_to_fp16, dilations = var_776, groups = var_714, pad = input_201_pad_0, pad_type = input_201_pad_type_0, strides = var_774, weight = model_22_cv3_0_1_conv_weight_to_fp16, x = input_199_cast_fp16)[name = tensor<string, []>("input_201_cast_fp16")];
            tensor<fp16, []> input_203_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_203_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_203_beta_0_to_fp16 = const()[name = tensor<string, []>("input_203_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 64, 80, 80]> input_203_cast_fp16 = clip(alpha = input_203_alpha_0_to_fp16, beta = input_203_beta_0_to_fp16, x = input_201_cast_fp16)[name = tensor<string, []>("input_203_cast_fp16")];
            tensor<int32, [2]> var_782 = const()[name = tensor<string, []>("op_782"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_784 = const()[name = tensor<string, []>("op_784"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_786_pad_type_0 = const()[name = tensor<string, []>("op_786_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_786_pad_0 = const()[name = tensor<string, []>("op_786_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 64, 1, 1]> model_22_cv3_0_2_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_0_2_weight_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4820544)))];
            tensor<fp16, [1]> model_22_cv3_0_2_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_0_2_bias_to_fp16"), val = tensor<fp16, [1]>([-0x1.548p+2])];
            tensor<fp16, [1, 1, 80, 80]> var_786_cast_fp16 = conv(bias = model_22_cv3_0_2_bias_to_fp16, dilations = var_784, groups = var_714, pad = var_786_pad_0, pad_type = var_786_pad_type_0, strides = var_782, weight = model_22_cv3_0_2_weight_to_fp16, x = input_203_cast_fp16)[name = tensor<string, []>("op_786_cast_fp16")];
            tensor<bool, []> xi_1_interleave_0 = const()[name = tensor<string, []>("xi_1_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 65, 80, 80]> xi_1_cast_fp16 = concat(axis = var_714, interleave = xi_1_interleave_0, values = (var_758_cast_fp16, var_786_cast_fp16))[name = tensor<string, []>("xi_1_cast_fp16")];
            tensor<int32, [2]> var_795 = const()[name = tensor<string, []>("op_795"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_797 = const()[name = tensor<string, []>("op_797"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_205_pad_type_0 = const()[name = tensor<string, []>("input_205_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_205_pad_0 = const()[name = tensor<string, []>("input_205_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 128, 3, 3]> model_22_cv2_1_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_1_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4820736)))];
            tensor<fp16, [64]> model_22_cv2_1_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_1_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4968256)))];
            tensor<fp16, [1, 64, 40, 40]> input_205_cast_fp16 = conv(bias = model_22_cv2_1_0_conv_bias_to_fp16, dilations = var_797, groups = var_714, pad = input_205_pad_0, pad_type = input_205_pad_type_0, strides = var_795, weight = model_22_cv2_1_0_conv_weight_to_fp16, x = input_169_cast_fp16)[name = tensor<string, []>("input_205_cast_fp16")];
            tensor<fp16, []> input_207_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_207_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_207_beta_0_to_fp16 = const()[name = tensor<string, []>("input_207_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 64, 40, 40]> input_207_cast_fp16 = clip(alpha = input_207_alpha_0_to_fp16, beta = input_207_beta_0_to_fp16, x = input_205_cast_fp16)[name = tensor<string, []>("input_207_cast_fp16")];
            tensor<int32, [2]> var_804 = const()[name = tensor<string, []>("op_804"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_806 = const()[name = tensor<string, []>("op_806"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_209_pad_type_0 = const()[name = tensor<string, []>("input_209_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_209_pad_0 = const()[name = tensor<string, []>("input_209_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_22_cv2_1_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_1_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4968448)))];
            tensor<fp16, [64]> model_22_cv2_1_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_1_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5042240)))];
            tensor<fp16, [1, 64, 40, 40]> input_209_cast_fp16 = conv(bias = model_22_cv2_1_1_conv_bias_to_fp16, dilations = var_806, groups = var_714, pad = input_209_pad_0, pad_type = input_209_pad_type_0, strides = var_804, weight = model_22_cv2_1_1_conv_weight_to_fp16, x = input_207_cast_fp16)[name = tensor<string, []>("input_209_cast_fp16")];
            tensor<fp16, []> input_211_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_211_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_211_beta_0_to_fp16 = const()[name = tensor<string, []>("input_211_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 64, 40, 40]> input_211_cast_fp16 = clip(alpha = input_211_alpha_0_to_fp16, beta = input_211_beta_0_to_fp16, x = input_209_cast_fp16)[name = tensor<string, []>("input_211_cast_fp16")];
            tensor<int32, [2]> var_812 = const()[name = tensor<string, []>("op_812"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_814 = const()[name = tensor<string, []>("op_814"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_816_pad_type_0 = const()[name = tensor<string, []>("op_816_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_816_pad_0 = const()[name = tensor<string, []>("op_816_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 64, 1, 1]> model_22_cv2_1_2_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_1_2_weight_to_fp16"), val = tensor<fp16, [64, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5042432)))];
            tensor<fp16, [64]> model_22_cv2_1_2_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_1_2_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5050688)))];
            tensor<fp16, [1, 64, 40, 40]> var_816_cast_fp16 = conv(bias = model_22_cv2_1_2_bias_to_fp16, dilations = var_814, groups = var_714, pad = var_816_pad_0, pad_type = var_816_pad_type_0, strides = var_812, weight = model_22_cv2_1_2_weight_to_fp16, x = input_211_cast_fp16)[name = tensor<string, []>("op_816_cast_fp16")];
            tensor<int32, [2]> var_823 = const()[name = tensor<string, []>("op_823"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_825 = const()[name = tensor<string, []>("op_825"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_213_pad_type_0 = const()[name = tensor<string, []>("input_213_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_213_pad_0 = const()[name = tensor<string, []>("input_213_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 128, 3, 3]> model_22_cv3_1_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_1_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5050880)))];
            tensor<fp16, [64]> model_22_cv3_1_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_1_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5198400)))];
            tensor<fp16, [1, 64, 40, 40]> input_213_cast_fp16 = conv(bias = model_22_cv3_1_0_conv_bias_to_fp16, dilations = var_825, groups = var_714, pad = input_213_pad_0, pad_type = input_213_pad_type_0, strides = var_823, weight = model_22_cv3_1_0_conv_weight_to_fp16, x = input_169_cast_fp16)[name = tensor<string, []>("input_213_cast_fp16")];
            tensor<fp16, []> input_215_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_215_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_215_beta_0_to_fp16 = const()[name = tensor<string, []>("input_215_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 64, 40, 40]> input_215_cast_fp16 = clip(alpha = input_215_alpha_0_to_fp16, beta = input_215_beta_0_to_fp16, x = input_213_cast_fp16)[name = tensor<string, []>("input_215_cast_fp16")];
            tensor<int32, [2]> var_832 = const()[name = tensor<string, []>("op_832"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_834 = const()[name = tensor<string, []>("op_834"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_217_pad_type_0 = const()[name = tensor<string, []>("input_217_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_217_pad_0 = const()[name = tensor<string, []>("input_217_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_22_cv3_1_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_1_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5198592)))];
            tensor<fp16, [64]> model_22_cv3_1_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_1_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5272384)))];
            tensor<fp16, [1, 64, 40, 40]> input_217_cast_fp16 = conv(bias = model_22_cv3_1_1_conv_bias_to_fp16, dilations = var_834, groups = var_714, pad = input_217_pad_0, pad_type = input_217_pad_type_0, strides = var_832, weight = model_22_cv3_1_1_conv_weight_to_fp16, x = input_215_cast_fp16)[name = tensor<string, []>("input_217_cast_fp16")];
            tensor<fp16, []> input_219_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_219_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_219_beta_0_to_fp16 = const()[name = tensor<string, []>("input_219_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 64, 40, 40]> input_219_cast_fp16 = clip(alpha = input_219_alpha_0_to_fp16, beta = input_219_beta_0_to_fp16, x = input_217_cast_fp16)[name = tensor<string, []>("input_219_cast_fp16")];
            tensor<int32, [2]> var_840 = const()[name = tensor<string, []>("op_840"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_842 = const()[name = tensor<string, []>("op_842"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_844_pad_type_0 = const()[name = tensor<string, []>("op_844_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_844_pad_0 = const()[name = tensor<string, []>("op_844_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 64, 1, 1]> model_22_cv3_1_2_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_1_2_weight_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5272576)))];
            tensor<fp16, [1]> model_22_cv3_1_2_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_1_2_bias_to_fp16"), val = tensor<fp16, [1]>([-0x1.01cp+3])];
            tensor<fp16, [1, 1, 40, 40]> var_844_cast_fp16 = conv(bias = model_22_cv3_1_2_bias_to_fp16, dilations = var_842, groups = var_714, pad = var_844_pad_0, pad_type = var_844_pad_type_0, strides = var_840, weight = model_22_cv3_1_2_weight_to_fp16, x = input_219_cast_fp16)[name = tensor<string, []>("op_844_cast_fp16")];
            tensor<bool, []> xi_3_interleave_0 = const()[name = tensor<string, []>("xi_3_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 65, 40, 40]> xi_3_cast_fp16 = concat(axis = var_714, interleave = xi_3_interleave_0, values = (var_816_cast_fp16, var_844_cast_fp16))[name = tensor<string, []>("xi_3_cast_fp16")];
            tensor<int32, [2]> var_853 = const()[name = tensor<string, []>("op_853"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_855 = const()[name = tensor<string, []>("op_855"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_223_pad_type_0 = const()[name = tensor<string, []>("input_223_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_223_pad_0 = const()[name = tensor<string, []>("input_223_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 256, 3, 3]> model_22_cv2_2_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_2_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5272768)))];
            tensor<fp16, [64]> model_22_cv2_2_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_2_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5567744)))];
            tensor<fp16, [1, 64, 20, 20]> input_223_cast_fp16 = conv(bias = model_22_cv2_2_0_conv_bias_to_fp16, dilations = var_855, groups = var_714, pad = input_223_pad_0, pad_type = input_223_pad_type_0, strides = var_853, weight = model_22_cv2_2_0_conv_weight_to_fp16, x = input_221_cast_fp16)[name = tensor<string, []>("input_223_cast_fp16")];
            tensor<fp16, []> input_225_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_225_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_225_beta_0_to_fp16 = const()[name = tensor<string, []>("input_225_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 64, 20, 20]> input_225_cast_fp16 = clip(alpha = input_225_alpha_0_to_fp16, beta = input_225_beta_0_to_fp16, x = input_223_cast_fp16)[name = tensor<string, []>("input_225_cast_fp16")];
            tensor<int32, [2]> var_862 = const()[name = tensor<string, []>("op_862"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_864 = const()[name = tensor<string, []>("op_864"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_227_pad_type_0 = const()[name = tensor<string, []>("input_227_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_227_pad_0 = const()[name = tensor<string, []>("input_227_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_22_cv2_2_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_2_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5567936)))];
            tensor<fp16, [64]> model_22_cv2_2_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_2_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5641728)))];
            tensor<fp16, [1, 64, 20, 20]> input_227_cast_fp16 = conv(bias = model_22_cv2_2_1_conv_bias_to_fp16, dilations = var_864, groups = var_714, pad = input_227_pad_0, pad_type = input_227_pad_type_0, strides = var_862, weight = model_22_cv2_2_1_conv_weight_to_fp16, x = input_225_cast_fp16)[name = tensor<string, []>("input_227_cast_fp16")];
            tensor<fp16, []> input_229_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_229_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_229_beta_0_to_fp16 = const()[name = tensor<string, []>("input_229_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 64, 20, 20]> input_229_cast_fp16 = clip(alpha = input_229_alpha_0_to_fp16, beta = input_229_beta_0_to_fp16, x = input_227_cast_fp16)[name = tensor<string, []>("input_229_cast_fp16")];
            tensor<int32, [2]> var_870 = const()[name = tensor<string, []>("op_870"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_872 = const()[name = tensor<string, []>("op_872"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_874_pad_type_0 = const()[name = tensor<string, []>("op_874_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_874_pad_0 = const()[name = tensor<string, []>("op_874_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 64, 1, 1]> model_22_cv2_2_2_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_2_2_weight_to_fp16"), val = tensor<fp16, [64, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5641920)))];
            tensor<fp16, [64]> model_22_cv2_2_2_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_2_2_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5650176)))];
            tensor<fp16, [1, 64, 20, 20]> var_874_cast_fp16 = conv(bias = model_22_cv2_2_2_bias_to_fp16, dilations = var_872, groups = var_714, pad = var_874_pad_0, pad_type = var_874_pad_type_0, strides = var_870, weight = model_22_cv2_2_2_weight_to_fp16, x = input_229_cast_fp16)[name = tensor<string, []>("op_874_cast_fp16")];
            tensor<int32, [2]> var_881 = const()[name = tensor<string, []>("op_881"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_883 = const()[name = tensor<string, []>("op_883"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_231_pad_type_0 = const()[name = tensor<string, []>("input_231_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_231_pad_0 = const()[name = tensor<string, []>("input_231_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 256, 3, 3]> model_22_cv3_2_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_2_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5650368)))];
            tensor<fp16, [64]> model_22_cv3_2_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_2_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5945344)))];
            tensor<fp16, [1, 64, 20, 20]> input_231_cast_fp16 = conv(bias = model_22_cv3_2_0_conv_bias_to_fp16, dilations = var_883, groups = var_714, pad = input_231_pad_0, pad_type = input_231_pad_type_0, strides = var_881, weight = model_22_cv3_2_0_conv_weight_to_fp16, x = input_221_cast_fp16)[name = tensor<string, []>("input_231_cast_fp16")];
            tensor<fp16, []> input_233_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_233_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_233_beta_0_to_fp16 = const()[name = tensor<string, []>("input_233_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 64, 20, 20]> input_233_cast_fp16 = clip(alpha = input_233_alpha_0_to_fp16, beta = input_233_beta_0_to_fp16, x = input_231_cast_fp16)[name = tensor<string, []>("input_233_cast_fp16")];
            tensor<int32, [2]> var_890 = const()[name = tensor<string, []>("op_890"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_892 = const()[name = tensor<string, []>("op_892"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_235_pad_type_0 = const()[name = tensor<string, []>("input_235_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_235_pad_0 = const()[name = tensor<string, []>("input_235_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_22_cv3_2_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_2_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5945536)))];
            tensor<fp16, [64]> model_22_cv3_2_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_2_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6019328)))];
            tensor<fp16, [1, 64, 20, 20]> input_235_cast_fp16 = conv(bias = model_22_cv3_2_1_conv_bias_to_fp16, dilations = var_892, groups = var_714, pad = input_235_pad_0, pad_type = input_235_pad_type_0, strides = var_890, weight = model_22_cv3_2_1_conv_weight_to_fp16, x = input_233_cast_fp16)[name = tensor<string, []>("input_235_cast_fp16")];
            tensor<fp16, []> input_237_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_237_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_237_beta_0_to_fp16 = const()[name = tensor<string, []>("input_237_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 64, 20, 20]> input_237_cast_fp16 = clip(alpha = input_237_alpha_0_to_fp16, beta = input_237_beta_0_to_fp16, x = input_235_cast_fp16)[name = tensor<string, []>("input_237_cast_fp16")];
            tensor<int32, [2]> var_898 = const()[name = tensor<string, []>("op_898"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_900 = const()[name = tensor<string, []>("op_900"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_902_pad_type_0 = const()[name = tensor<string, []>("op_902_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_902_pad_0 = const()[name = tensor<string, []>("op_902_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 64, 1, 1]> model_22_cv3_2_2_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_2_2_weight_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6019520)))];
            tensor<fp16, [1]> model_22_cv3_2_2_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_2_2_bias_to_fp16"), val = tensor<fp16, [1]>([-0x1p+3])];
            tensor<fp16, [1, 1, 20, 20]> var_902_cast_fp16 = conv(bias = model_22_cv3_2_2_bias_to_fp16, dilations = var_900, groups = var_714, pad = var_902_pad_0, pad_type = var_902_pad_type_0, strides = var_898, weight = model_22_cv3_2_2_weight_to_fp16, x = input_237_cast_fp16)[name = tensor<string, []>("op_902_cast_fp16")];
            tensor<bool, []> xi_interleave_0 = const()[name = tensor<string, []>("xi_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 65, 20, 20]> xi_cast_fp16 = concat(axis = var_714, interleave = xi_interleave_0, values = (var_874_cast_fp16, var_902_cast_fp16))[name = tensor<string, []>("xi_cast_fp16")];
            tensor<int32, [3]> var_906 = const()[name = tensor<string, []>("op_906"), val = tensor<int32, [3]>([1, 65, -1])];
            tensor<fp16, [1, 65, 6400]> var_907_cast_fp16 = reshape(shape = var_906, x = xi_1_cast_fp16)[name = tensor<string, []>("op_907_cast_fp16")];
            tensor<int32, [3]> var_908 = const()[name = tensor<string, []>("op_908"), val = tensor<int32, [3]>([1, 65, -1])];
            tensor<fp16, [1, 65, 1600]> var_909_cast_fp16 = reshape(shape = var_908, x = xi_3_cast_fp16)[name = tensor<string, []>("op_909_cast_fp16")];
            tensor<int32, [3]> var_910 = const()[name = tensor<string, []>("op_910"), val = tensor<int32, [3]>([1, 65, -1])];
            tensor<fp16, [1, 65, 400]> var_911_cast_fp16 = reshape(shape = var_910, x = xi_cast_fp16)[name = tensor<string, []>("op_911_cast_fp16")];
            tensor<bool, []> var_913_interleave_0 = const()[name = tensor<string, []>("op_913_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 65, 8400]> var_913_cast_fp16 = concat(axis = var_709, interleave = var_913_interleave_0, values = (var_907_cast_fp16, var_909_cast_fp16, var_911_cast_fp16))[name = tensor<string, []>("op_913_cast_fp16")];
            tensor<int32, [2]> var_914 = const()[name = tensor<string, []>("op_914"), val = tensor<int32, [2]>([64, 1])];
            tensor<int32, []> var_915_axis_0 = const()[name = tensor<string, []>("op_915_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 8400]> var_915_cast_fp16_0, tensor<fp16, [1, 1, 8400]> var_915_cast_fp16_1 = split(axis = var_915_axis_0, split_sizes = var_914, x = var_913_cast_fp16)[name = tensor<string, []>("op_915_cast_fp16")];
            tensor<int32, [4]> var_921 = const()[name = tensor<string, []>("op_921"), val = tensor<int32, [4]>([1, 4, 16, 8400])];
            tensor<fp16, [1, 4, 16, 8400]> var_922_cast_fp16 = reshape(shape = var_921, x = var_915_cast_fp16_0)[name = tensor<string, []>("op_922_cast_fp16")];
            tensor<int32, [4]> var_923_perm_0 = const()[name = tensor<string, []>("op_923_perm_0"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<fp16, [1, 16, 4, 8400]> transpose_0 = transpose(perm = var_923_perm_0, x = var_922_cast_fp16)[name = tensor<string, []>("transpose_0")];
            tensor<fp16, [1, 16, 4, 8400]> input_cast_fp16 = softmax(axis = var_714, x = transpose_0)[name = tensor<string, []>("input_cast_fp16")];
            tensor<int32, [2]> var_926 = const()[name = tensor<string, []>("op_926"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_928 = const()[name = tensor<string, []>("op_928"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_930_pad_type_0 = const()[name = tensor<string, []>("op_930_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_930_pad_0 = const()[name = tensor<string, []>("op_930_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 16, 1, 1]> model_22_dfl_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_dfl_conv_weight_to_fp16"), val = tensor<fp16, [1, 16, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6019712)))];
            tensor<fp16, [1, 1, 4, 8400]> var_930_cast_fp16 = conv(dilations = var_928, groups = var_714, pad = var_930_pad_0, pad_type = var_930_pad_type_0, strides = var_926, weight = model_22_dfl_conv_weight_to_fp16, x = input_cast_fp16)[name = tensor<string, []>("op_930_cast_fp16")];
            tensor<int32, [3]> var_931 = const()[name = tensor<string, []>("op_931"), val = tensor<int32, [3]>([1, 4, 8400])];
            tensor<fp16, [1, 4, 8400]> distance_cast_fp16 = reshape(shape = var_931, x = var_930_cast_fp16)[name = tensor<string, []>("distance_cast_fp16")];
            tensor<int32, [2]> var_934_split_sizes_0 = const()[name = tensor<string, []>("op_934_split_sizes_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, []> var_934_axis_0 = const()[name = tensor<string, []>("op_934_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 2, 8400]> var_934_cast_fp16_0, tensor<fp16, [1, 2, 8400]> var_934_cast_fp16_1 = split(axis = var_934_axis_0, split_sizes = var_934_split_sizes_0, x = distance_cast_fp16)[name = tensor<string, []>("op_934_cast_fp16")];
            tensor<fp16, [1, 2, 8400]> anchor_points_to_fp16 = const()[name = tensor<string, []>("anchor_points_to_fp16"), val = tensor<fp16, [1, 2, 8400]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6019840)))];
            tensor<fp16, [1, 2, 8400]> x1y1_cast_fp16 = sub(x = anchor_points_to_fp16, y = var_934_cast_fp16_0)[name = tensor<string, []>("x1y1_cast_fp16")];
            tensor<fp16, [1, 2, 8400]> x2y2_cast_fp16 = add(x = anchor_points_to_fp16, y = var_934_cast_fp16_1)[name = tensor<string, []>("x2y2_cast_fp16")];
            tensor<fp16, [1, 2, 8400]> var_938_cast_fp16 = add(x = x1y1_cast_fp16, y = x2y2_cast_fp16)[name = tensor<string, []>("op_938_cast_fp16")];
            tensor<fp16, []> _inversed_c_xy_y_0_to_fp16 = const()[name = tensor<string, []>("_inversed_c_xy_y_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 2, 8400]> _inversed_c_xy_cast_fp16 = mul(x = var_938_cast_fp16, y = _inversed_c_xy_y_0_to_fp16)[name = tensor<string, []>("_inversed_c_xy_cast_fp16")];
            tensor<fp16, [1, 2, 8400]> wh_cast_fp16 = sub(x = x2y2_cast_fp16, y = x1y1_cast_fp16)[name = tensor<string, []>("wh_cast_fp16")];
            tensor<bool, []> var_943_interleave_0 = const()[name = tensor<string, []>("op_943_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 4, 8400]> var_943_cast_fp16 = concat(axis = var_714, interleave = var_943_interleave_0, values = (_inversed_c_xy_cast_fp16, wh_cast_fp16))[name = tensor<string, []>("op_943_cast_fp16")];
            tensor<fp16, [1, 8400]> var_703_to_fp16 = const()[name = tensor<string, []>("op_703_to_fp16"), val = tensor<fp16, [1, 8400]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6053504)))];
            tensor<fp16, [1, 4, 8400]> dbox_cast_fp16 = mul(x = var_943_cast_fp16, y = var_703_to_fp16)[name = tensor<string, []>("dbox_cast_fp16")];
            tensor<fp16, [1, 1, 8400]> var_945_cast_fp16 = sigmoid(x = var_915_cast_fp16_1)[name = tensor<string, []>("op_945_cast_fp16")];
            tensor<bool, []> var_947_interleave_0 = const()[name = tensor<string, []>("op_947_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 5, 8400]> var_947_cast_fp16 = concat(axis = var_714, interleave = var_947_interleave_0, values = (dbox_cast_fp16, var_945_cast_fp16))[name = tensor<string, []>("op_947_cast_fp16")];
            tensor<string, []> var_947_cast_fp16_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_947_cast_fp16_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp32, [1, 5, 8400]> var_947 = cast(dtype = var_947_cast_fp16_to_fp32_dtype_0, x = var_947_cast_fp16)[name = tensor<string, []>("cast_7")];
        } -> (var_947);
}